##  {0}{1}.. to properties value is MessageFormat ##
##Eclipes
##SMS

##join
joinIdDupleCheck=select count(*) from member where user_id=?
join=insert into member(user_id, passwd, hp, timeJoin, timeLogin ) value (?,password(?),?,now(),now())
login=select count(*) from member where user_id = ? and leaveYN = 'N' and passwd=password(?) limit 1
loginSuper=select count(*) from member where user_id = ? and leaveYN = 'N' limit 1
loginUpdateTime=update member set timeLogin=? where user_id=?
userInformation=select user_id, leaveYN, line, unit_cost, hp from member where user_id = ?
modifyNew=update member set passwd=password(?), hp=? where user_id=?
joinHpDupleCheck=select count(*) from member where hp=?

##emotion
selectEmtCate=select category from emoticon where gubun=? group by category order by category asc;
selectEmtPageOfCate=select (select count(*) from emoticon where gubun=? and category like ?) as cnt, idx, msg from emoticon where gubun=? and category like ? order by idx DESC limit ?,?
selectEmtOfCate=select (select count(*) from emoticon where gubun=? and category like ?) as cnt, idx, msg from emoticon where gubun=? and category like ? order by idx DESC
selectEmtPageOfCate_count=select count(*) from emoticon where gubun=? and category like ?

##mymsg
select_mymsgPage=select (select count(*)from mymsg where user_id=?) as cnt,  idx, msg from mymsg where user_id=? order by idx DESC limit ?,?
select_mymsgPage_count=select count(*)from mymsg where user_id=?
select_mymsg=select (select count(*)from mymsg where user_id=?) as cnt,  idx, msg from mymsg where user_id=? order by idx DESC
insert_mymsg=insert into mymsg(user_id, msg) values(?,?)
delete_mymsg=delete from mymsg where user_id=? and idx=?

##sentmessage
mysent_message=select * from (select idx, message as msg from sent_log where user_id=? order by idx DESC limit ?,?) a
mysent_message_count=select count(*) from sent_log where user_id=?

##returnphone
userReturnPhone=select idx, phone from return_phone where user_id=? order by timeWrite desc
insertUserReturnPhone=insert into return_phone(user_id, phone, timeWrite) values (?, ?, now())
defUserReturnPhone=update return_phone set timeWrite=now() where idx=? and user_id=?
deleteUserReturnPhone=delete from return_phone where idx=? and user_id=? 

##send
insertSendLog=INSERT INTO sent_log(user_id, line, mode, method, message, cnt, user_ip, timeSend, timeWrite) VALUES (?, ?, ?, ?, ?, ?, ?, ?, now());
getSendLogInsertKey=select LAST_INSERT_ID()
getRefuseList=select phone from refuse where user_id=? group by phone

##LG
insertLGClient=insert into SC_TRAN( TR_SENDDATE, TR_ID, TR_PHONE, TR_CALLBACK, TR_MSG, TR_ETC1, TR_ETC2, TR_ETC3,  TR_SENDSTAT, TR_RSLTSTAT) values (?,?,?,?,?,?,?,?,?,?)
insertLGLMSClient=insert into MMS_MSG( REQDATE, ID, PHONE, CALLBACK, MSG, ETC1, ETC2, ETC3, STATUS, RSLT, FILE_CNT, FILE_CNT_REAL, FILE_PATH1, SUBJECT ) values (?,?,?,?,?,?,?,?,?,?,0,0,'',?)
insertLGMMSClient=insert into MMS_MSG( REQDATE, ID, PHONE, CALLBACK, MSG, ETC1, ETC2, ETC3, STATUS, RSLT, FILE_CNT, FILE_CNT_REAL, FILE_PATH1, SUBJECT ) values (?,?,?,?,?,?,?,?,?,?,1,1,?,?)

##PP
insertPPClient=insert into uds_msg( SEND_TIME, ID, DEST_PHONE, SEND_PHONE, MSG_BODY, SENT_KEY, DEST_NAME, SEND_TYPE, STATUS, CALL_STATUS, MSG_TYPE, REQUEST_TIME) values (?,?,?,?,?,?,?,?,?,?,0, now())
insertPPLMSClient=insert into uds_msg( SEND_TIME, ID, DEST_PHONE, SEND_PHONE, MSG_BODY, SENT_KEY, DEST_NAME, SEND_TYPE, STATUS, CALL_STATUS, FAX_FILE, SUBJECT, MSG_TYPE, REQUEST_TIME ) values (?,?,?,?,?,?,?,?,?,?,NULL,?,5, now())
insertPPMMSClient=insert into uds_msg( SEND_TIME, ID, DEST_PHONE, SEND_PHONE, MSG_BODY, SENT_KEY, DEST_NAME, SEND_TYPE, STATUS, CALL_STATUS, FAX_FILE, SUBJECT, MSG_TYPE, REQUEST_TIME ) values (?,?,?,?,?,?,?,?,?,?,?,?,5, now())

##KT
insertKTClient=INSERT INTO SDK_SMS_SEND ( SEND_DATE, USER_ID,DEST_INFO, CALLBACK,  SMS_MSG, RESERVED1,RESERVED2, SUBJECT, CALLBACK_URL, NOW_DATE, SEND_STATUS, SEND_RESULT, SCHEDULE_TYPE, DEST_COUNT) VALUES (?, ?, ?, ? , ?, ?, ?, '','', DATE_FORMAT(NOW(),'%Y%m%d%H%i%S'), ?, ?, 1, 1);
insertKTLMSClient=INSERT INTO SDK_MMS_SEND (SEND_DATE, USER_ID,DEST_INFO, CALLBACK,  MMS_MSG, RESERVED1,RESERVED2, SUBJECT,  NOW_DATE,SEND_STATUS, SEND_RESULT, MSG_TYPE, CONTENT_COUNT, CONTENT_DATA, SCHEDULE_TYPE, DEST_COUNT) values (?, ?, ?, ? , ?, ?, ?, ?, DATE_FORMAT(NOW(),'%Y%m%d%H%i%S'), ?, ?, 0, 0, '', 1, 1);
insertKTMMSClient=INSERT INTO SDK_MMS_SEND (SEND_DATE, USER_ID,DEST_INFO, CALLBACK,  MMS_MSG, RESERVED1,RESERVED2, SUBJECT,  NOW_DATE,SEND_STATUS, SEND_RESULT, MSG_TYPE, CONTENT_COUNT, CONTENT_DATA, SCHEDULE_TYPE, DEST_COUNT) values (?, ?, ?, ? , ?, ?, ?, ?, DATE_FORMAT(NOW(),'%Y%m%d%H%i%S'), ?, ?, 0, ?, ?, 1, 1);



##address
address_group_list=SELECT idx, user_id, grp, grpName, name, phone, memo, writedate, etcInfo FROM address where user_id=? and grp=?
address_name_list=SELECT idx, user_id, grp, grpName, name, phone, memo, writedate, etcInfo FROM address where user_id=? and grp=?
address_name_list_group=SELECT idx, user_id, grp, grpName, name, phone, memo, writedate, etcInfo FROM address where user_id=? and grpName=? and grp=?
address_insert_group=INSERT INTO address	(user_id, grp, grpName, name, phone, memo, writedate, etcInfo) VALUES (?, ?, ?, ?, ?, ?, ?, ?)
address_update_group=UPDATE address SET user_id = ? , grp = ?, grpName = ?, name = ?, phone = ?, memo = ?, writedate = ?, etcInfo = ? WHERE idx = ? 
address_delete_group=delete from address WHERE grpName = ? 
address_insert_name=INSERT INTO address	(user_id, grp, grpName, name, phone, memo, writedate, etcInfo) VALUES (?, ?, ?, ?, ?, ?, ?, ?);
address_update_name=UPDATE address SET user_id = ? , grp = ?, grpName = ?, name = ?, phone = ?, memo = ?, writedate = ?, etcInfo = ? WHERE idx = ? 
address_delete_name=delete from address WHERE idx = ?
address_search_list=select idx, grpName, name, phone, memo from address where user_id=? and ( phone like ? or name like ?) 
address_last_insert_id=select LAST_INSERT_ID()
address_tree_xml=select idx, grp, grpName, name, phone, memo from address where user_id=? order by grpName, grp, name
address_tree_xml_search=select idx, grp, grpName, name, phone, memo from address where user_id=? and ( phone like ? or name like ?)  order by grpName, grp, name

##sent
sent_list=SELECT idx, user_id, line, mode, method, message, cnt, user_ip, timeSend, timeWrite, ynDel, delType, timeDel FROM sent_log where user_id=? and ynDel='N' and DATE_FORMAT(timeSend,'%Y%m')=? order by timeSend desc
sent_update=UPDATE sent_log SET line = ?, mode = ?, method = ?, message = ?, user_ip = ?, timeSend = ?, timeWrite = ?, ynDel = ?, delType = ?, timeDel = ? where idx=?

sent_lg_select=select TR_ETC1, TR_SENDDATE, TR_PHONE, TR_ETC2, TR_CALLBACK, TR_MSG, TR_RSLTSTAT, TR_RSLTDATE, TR_SENDSTAT, TR_ETC3 from SC_TRAN where TR_ID=? and TR_ETC1=? union all select TR_ETC1, TR_SENDDATE, TR_PHONE, TR_ETC2, TR_CALLBACK, TR_MSG, TR_RSLTSTAT, TR_RSLTDATE, TR_SENDSTAT, TR_ETC3 from SC_LOG where TR_ID=? and TR_ETC1=?
sent_lg_select_status=select sum(if( TR_SENDSTAT = '0', 1, 0)) as standbyCount, sum(if( TR_SENDSTAT = '1', 1, 0)) as sendingCount, sum(if(TR_RSLTSTAT in ('06'), 1, 0)) as successCount, sum(if(TR_SENDSTAT = '2' AND  TR_RSLTSTAT not in ('00','06'), 1, 0)) as failCount from ( select TR_SENDSTAT,TR_RSLTSTAT from SC_LOG where TR_ID=? and TR_ETC1=?  union all select TR_SENDSTAT,TR_RSLTSTAT from SC_TRAN where TR_ID=? and TR_ETC1=? ) as a
sent_lg_select_paged_count=select count(*) as cnt from ( select TR_ETC1, TR_SENDDATE, TR_PHONE, TR_ETC2, TR_CALLBACK, TR_MSG, TR_RSLTSTAT, TR_RSLTDATE, TR_SENDSTAT, TR_ETC3 from SC_TRAN where TR_ID=? and TR_ETC1=? {0} union all select TR_ETC1, TR_SENDDATE, TR_PHONE, TR_ETC2, TR_CALLBACK, TR_MSG, TR_RSLTSTAT, TR_RSLTDATE, TR_SENDSTAT, TR_ETC3 from SC_LOG where TR_ID=? and TR_ETC1=? {0} )a
sent_lg_select_paged=select * from ( select TR_NUM, TR_ETC1, TR_SENDDATE, TR_PHONE, TR_ETC2, TR_CALLBACK, TR_MSG, TR_RSLTSTAT, TR_RSLTDATE, TR_SENDSTAT, TR_ETC3, TR_ETC4 from SC_TRAN where TR_ID=? and TR_ETC1=? {0} union all select TR_NUM,TR_ETC1, TR_SENDDATE, TR_PHONE, TR_ETC2, TR_CALLBACK, TR_MSG, TR_RSLTSTAT, TR_RSLTDATE, TR_SENDSTAT, TR_ETC3, TR_ETC4 from SC_LOG where TR_ID=? and TR_ETC1=? {0} )a limit ?, ?
sent_lg_select_mms=SELECT ETC1, REQDATE, PHONE, ETC2, CALLBACK, MSG, RSLT, RSLTDATE, STATUS, ETC3, FILE_PATH1 from MMS_MSG where ID=? and ETC1=? union all SELECT ETC1, REQDATE, PHONE, ETC2, CALLBACK, MSG, RSLT, RSLTDATE, STATUS, ETC3, FILE_PATH1 from MMS_LOG where ID=? and ETC1=?
sent_lg_select_mms_status=select sum(if( STATUS = '0', 1, 0)) as standbyCount, sum(if( STATUS in ('1','2'), 1, 0)) as sendingCount, sum( if( STATUS = '3', if(RSLT in ('1000','1100'), 1, 0) ,0 )) as successCount, sum( if( STATUS = '3', if(RSLT not in ('1000','1100'), 1, 0),0 )) as failCount from ( select STATUS,RSLT from MMS_LOG where ID=? and ETC1=?  union all select STATUS,RSLT from MMS_MSG where ID=? and ETC1=? ) as a
sent_lg_select_mms_paged_count=select count(*) as cnt from ( SELECT ETC1, REQDATE, PHONE, ETC2, CALLBACK, MSG, RSLT, RSLTDATE, STATUS, ETC3, FILE_PATH1 from MMS_MSG where ID=? and ETC1=? {0} union all SELECT ETC1, REQDATE, PHONE, ETC2, CALLBACK, MSG, RSLT, RSLTDATE, STATUS, ETC3, FILE_PATH1 from MMS_LOG where ID=? and ETC1=? {0} )a
sent_lg_select_mms_paged=select * from ( SELECT MSGKEY,ETC1, REQDATE, PHONE, ETC2, CALLBACK, MSG, RSLT, RSLTDATE, STATUS, ETC3, FILE_PATH1, ETC4 from MMS_MSG where ID=? and ETC1=? {0} union all SELECT MSGKEY,ETC1, REQDATE, PHONE, ETC2, CALLBACK, MSG, RSLT, RSLTDATE, STATUS, ETC3, FILE_PATH1, ETC4 from MMS_LOG where ID=? and ETC1=? {0} )a limit ?, ?
sent_lg_cancel_count=select count(*) as cnt from SC_TRAN where TR_ID=? and TR_ETC1=? and TR_SENDSTAT='0'
sent_lg_cancel_count_mms=select count(*) as cnt from MMS_MSG where ID=? and ETC1=? and STATUS='0'
sent_lg_count=select sum(a.cnt) as total from ( select count(*) as cnt from SC_TRAN where TR_ID=? and TR_ETC1=? union all select count(*) as cnt from SC_LOG where TR_ID=? and TR_ETC1=? ) a 
sent_lg_count_mms=select sum(a.cnt) as total from ( select count(*) as cnt from MMS_MSG where ID=? and ETC1=? union all select count(*) as cnt from MMS_LOG where ID=? and ETC1=? ) a
sent_lg_cancel=delete from SC_TRAN where TR_ID=? and TR_ETC1=? and TR_SENDSTAT='0'
sent_lg_cancel_mms=delete from MMS_MSG where ID=? and ETC1=? and STATUS='0'
sent_lg_fail_update=update SC_LOG set TR_ETC4=? where TR_ID=? and TR_ETC1=? and TR_ETC4 is null
sent_lg_fail_update_mms=update MSG_LOG set ETC4=? where ID=? and ETC1=? and ETC4 is null

sent_pp_select=select * from (select SENT_KEY AS TR_ETC1, SEND_TIME AS TR_SENDDATE, DEST_PHONE AS TR_PHONE, DEST_NAME AS TR_ETC2, SEND_PHONE AS TR_CALLBACK, MSG_BODY AS TR_MSG, CALL_STATUS AS TR_RSLTSTAT, REPORT_TIME AS TR_RSLTDATE, STATUS AS TR_SENDSTAT, SEND_TYPE AS TR_ETC3 from uds_msg where ID=? and SENT_KEY=? union all select SENT_KEY AS TR_ETC1, SEND_TIME AS TR_SENDDATE, DEST_PHONE AS TR_PHONE, DEST_NAME AS TR_ETC2, SEND_PHONE AS TR_CALLBACK, MSG_BODY AS TR_MSG, CALL_STATUS AS TR_RSLTSTAT, REPORT_TIME AS TR_RSLTDATE, STATUS AS TR_SENDSTAT, SEND_TYPE AS TR_ETC3 from uds_log where ID=? and SENT_KEY=?) A
sent_pp_select_status=select a.STATUS, a.CALL_STATUS, count(*) as cnt from ( select STATUS, CALL_STATUS from uds_log where ID=? and SENT_KEY=?  union all select STATUS, CALL_STATUS from uds_msg where ID=? and SENT_KEY=? ) as a group by a.STATUS , a.CALL_STATUS;
sent_pp_select_paged_count=select count(*) as cnt from ( select * from uds_log where ID=? and SENT_KEY=? {0} union all select * from uds_msg where ID=? and SENT_KEY=? {0} )a
sent_pp_select_paged=select * from ( select CMID AS TR_NUM, SENT_KEY AS TR_ETC1, SEND_TIME AS TR_SENDDATE, DEST_PHONE AS TR_PHONE, DEST_NAME AS TR_ETC2, SEND_PHONE AS TR_CALLBACK, MSG_BODY AS TR_MSG, CALL_STATUS AS TR_RSLTSTAT, REPORT_TIME AS TR_RSLTDATE, STATUS AS TR_SENDSTAT, SEND_TYPE AS TR_ETC3, ETC1 as TR_ETC4 from uds_msg where ID=? and SENT_KEY=? {0} union all select CMID AS TR_NUM,SENT_KEY AS TR_ETC1, SEND_TIME AS TR_SENDDATE, DEST_PHONE AS TR_PHONE, DEST_NAME AS TR_ETC2, SEND_PHONE AS TR_CALLBACK, MSG_BODY AS TR_MSG, CALL_STATUS AS TR_RSLTSTAT, REPORT_TIME AS TR_RSLTDATE, STATUS AS TR_SENDSTAT, SEND_TYPE AS TR_ETC3, ETC1 as TR_ETC4 from uds_log where ID=? and SENT_KEY=? {0} )a limit ?, ?
sent_pp_select_mms=SELECT SENT_KEY AS ETC1,  SEND_TIME AS REQDATE, DEST_PHONE AS PHONE, DEST_NAME AS ETC2, SEND_PHONE AS CALLBACK, MSG_BODY AS MSG, CALL_STATUS AS RSLT, REPORT_TIME AS RSLTDATE, STATUS, SEND_TYPE AS ETC3, FAX_FILE AS FILE_PATH1, ETC1 as ETC4 from uds_msg where ID=? and SENT_KEY=? union all SELECT SENT_KEY AS ETC1,  SEND_TIME AS REQDATE, DEST_PHONE AS PHONE, DEST_NAME AS ETC2, SEND_PHONE AS CALLBACK, MSG_BODY AS MSG, CALL_STATUS AS RSLT, REPORT_TIME AS RSLTDATE, STATUS, SEND_TYPE AS ETC3, FAX_FILE AS FILE_PATH1, ETC1 as ETC4 from uds_log where ID=? and SENT_KEY=?
sent_pp_select_mms_status=select sum(if( STATUS = 0, 1, 0)) as standbyCount,sum(if( STATUS = 1, 1, 0)) as sendingCount,sum(if( CALL_STATUS in (6600), 1, 0)) as successCount,sum(if( CALL_STATUS not in (9, 6600) , 1, 0)) as failCount from ( select STATUS, CALL_STATUS from uds_log where ID=? and SENT_KEY=?  union all select STATUS, CALL_STATUS from uds_msg where ID=? and SENT_KEY=? ) as a
sent_pp_select_mms_paged_count=select count(*) as cnt from ( SELECT * from uds_msg where ID=? and SENT_KEY=? {0} union all SELECT * from uds_log where ID=? and SENT_KEY=? {0} )a
sent_pp_select_mms_paged=select * from ( SELECT CMID AS MSGKEY, SENT_KEY AS ETC1,  SEND_TIME AS REQDATE, DEST_PHONE AS PHONE, DEST_NAME AS ETC2, SEND_PHONE AS CALLBACK, MSG_BODY AS MSG, CALL_STATUS AS RSLT, REPORT_TIME AS RSLTDATE, STATUS, SEND_TYPE AS ETC3, FAX_FILE AS FILE_PATH1, ETC1 as ETC4 from uds_msg where ID=? and SENT_KEY=? {0} union all SELECT CMID AS MSGKEY,SENT_KEY AS ETC1,  SEND_TIME AS REQDATE, DEST_PHONE AS PHONE, DEST_NAME AS ETC2, SEND_PHONE AS CALLBACK, MSG_BODY AS MSG, CALL_STATUS AS RSLT, REPORT_TIME AS RSLTDATE, STATUS, SEND_TYPE AS ETC3, FAX_FILE AS FILE_PATH1, ETC1 as ETC4 from uds_log where ID=? and SENT_KEY=? {0} )a limit ?, ?
sent_pp_cancel_count=select count(*) as cnt from uds_msg where ID=? and SENT_KEY=? and STATUS='0'
sent_pp_cancel_count_mms=select count(*) as cnt from uds_msg where ID=? and SENT_KEY=? and STATUS='0'
sent_pp_count=select sum(a.cnt) as total from ( select count(*) as cnt from uds_msg where ID=? and SENT_KEY=? union all select count(*) as cnt from uds_log where ID=? and SENT_KEY=? ) a 
sent_pp_count_mms=select sum(a.cnt) as total from ( select count(*) as cnt from uds_msg where ID=? and SENT_KEY=? union all select count(*) as cnt from uds_log where ID=? and SENT_KEY=? ) a
sent_pp_cancel=delete from uds_msg where ID=? and SENT_KEY=? and STATUS='0'
sent_pp_cancel_mms=delete from uds_msg where ID=? and SENT_KEY=? and STATUS='0'
sent_pp_fail_update=update uds_log set ETC1=? where ID=? and SENT_KEY=? and ETC1 is null


sent_list=select timeSend, idx  , line, reservation, returnPhone, count, message, cnt, timeWrite, tranType from sent_log where timeSend between ? and ?


##KT
sent_kt_select=select s.RESERVED1, s.SEND_DATE, s.DEST_INFO, s.CALLBACK, s.SMS_MSG, d.RESULT, d.DELIVER_DATE, s.SEND_STATUS, RESERVED4 from SDK_SMS_SEND s left outer join SDK_SMS_REPORT_DETAIL d on(s.MSG_ID = d.MSG_ID) where s.USER_ID=? and s.RESERVED1=? union all select s.RESERVED1, s.SEND_DATE, s.DEST_INFO, s.CALLBACK, s.SMS_MSG, d.RESULT, d.DELIVER_DATE, 3 as SEND_STATUS, RESERVED4 from SDK_SMS_REPORT s left outer join SDK_SMS_REPORT_DETAIL d on(s.MSG_ID = d.MSG_ID) where s.USER_ID=? and s.RESERVED1=?
sent_kt_select_status=select sum(if( RESULT is null , 1, 0)) as standbyCount,sum(if( RESULT = 0 and SEND_STATUS = 5 , 1, 0)) as sendingCount, sum(if( RESULT = 2 , 1, 0)) as successCount,sum(if( RESULT not in (0,2), 1, 0)) as failCount from ( select d.RESULT,5 as SEND_STATUS from SDK_SMS_REPORT s left outer join SDK_SMS_REPORT_DETAIL d on(s.MSG_ID = d.MSG_ID) where s.USER_ID=? and s.RESERVED1=? union all select d.RESULT, s.SEND_STATUS from SDK_SMS_SEND  s left outer join SDK_SMS_REPORT_DETAIL d on(s.MSG_ID = d.MSG_ID) where s.USER_ID=? and s.RESERVED1=? ) as a
sent_kt_select_paged_count=select count(*) as cnt from ( select s.MSG_ID from SDK_SMS_SEND s left outer join SDK_SMS_REPORT_DETAIL d on(s.MSG_ID = d.MSG_ID) where s.USER_ID=? and s.RESERVED1=? {0} union all select s.MSG_ID from SDK_SMS_REPORT s left outer join SDK_SMS_REPORT_DETAIL d on(s.MSG_ID = d.MSG_ID) where s.USER_ID=? and s.RESERVED1=? {0} )a 
sent_kt_select_paged=select * from ( select s.MSG_ID, s.RESERVED1, s.SEND_DATE, s.DEST_INFO, s.CALLBACK, s.SMS_MSG, d.RESULT, d.DELIVER_DATE, s.SEND_STATUS, s.RESERVED4, s.RESERVED3 from SDK_SMS_SEND s left outer join SDK_SMS_REPORT_DETAIL d on(s.MSG_ID = d.MSG_ID) where s.USER_ID=? and s.RESERVED1=? {0} union all select s.MSG_ID, s.RESERVED1, s.SEND_DATE, s.DEST_INFO, s.CALLBACK, s.SMS_MSG, d.RESULT, d.DELIVER_DATE, 3 as SEND_STATUS, s.RESERVED4, s.RESERVED3 from SDK_SMS_REPORT s left outer join SDK_SMS_REPORT_DETAIL d on(s.MSG_ID = d.MSG_ID) where s.USER_ID=? and s.RESERVED1=? {0} )a limit ?, ?
sent_kt_select_mms=select s.RESERVED1, s.SEND_DATE, s.DEST_INFO, s.CALLBACK, s.MMS_MSG, d.RESULT, d.DELIVER_DATE, s.SEND_STATUS, s.RESERVED4, s.CONTENT_DATA from SDK_MMS_SEND s left outer join SDK_MMS_REPORT_DETAIL d on(s.MSG_ID = d.MSG_ID) where s.USER_ID=? and s.RESERVED1=? union all select s.RESERVED1, s.SEND_DATE, s.DEST_INFO, s.CALLBACK, s.MMS_MSG, d.RESULT, d.DELIVER_DATE, 3 as SEND_STATUS, s.RESERVED4, s.CONTENT_DATA from SDK_MMS_REPORT s left outer join SDK_MMS_REPORT_DETAIL d on(s.MSG_ID = d.MSG_ID) where s.USER_ID=? and s.RESERVED1=?
sent_kt_select_mms_status=select sum(if( RESULT is null , 1, 0)) as standbyCount,sum(if( RESULT = 0 and SEND_STATUS = 5 , 1, 0)) as sendingCount, sum(if( RESULT = 2 , 1, 0)) as successCount,sum(if( RESULT not in (0,2), 1, 0)) as failCount from ( select d.RESULT,5 as SEND_STATUS from SDK_MMS_REPORT s left outer join SDK_MMS_REPORT_DETAIL d on(s.MSG_ID = d.MSG_ID) where s.USER_ID=? and s.RESERVED1=? union all select d.RESULT, s.SEND_STATUS from SDK_MMS_SEND  s left outer join SDK_MMS_REPORT_DETAIL d on(s.MSG_ID = d.MSG_ID) where s.USER_ID=? and s.RESERVED1=? ) as a
sent_kt_select_mms_paged_count=select count(*) as cnt from ( select s.MSG_ID from SDK_MMS_SEND s left outer join SDK_MMS_REPORT_DETAIL d on(s.MSG_ID = d.MSG_ID) where s.USER_ID=? and s.RESERVED1=? {0} union all select s.MSG_ID from SDK_MMS_REPORT s left outer join SDK_MMS_REPORT_DETAIL d on(s.MSG_ID = d.MSG_ID) where s.USER_ID=? and s.RESERVED1=? {0} )a 
sent_kt_select_mms_paged=select * from ( select s.MSG_ID, s.RESERVED1, s.SEND_DATE, s.DEST_INFO, s.CALLBACK, s.MMS_MSG, d.RESULT, d.DELIVER_DATE, s.SEND_STATUS, s.RESERVED4, s.RESERVED3, s.CONTENT_DATA from SDK_MMS_SEND s left outer join SDK_MMS_REPORT_DETAIL d on(s.MSG_ID = d.MSG_ID) where s.USER_ID=? and s.RESERVED1=? {0} union all select s.MSG_ID, s.RESERVED1, s.SEND_DATE, s.DEST_INFO, s.CALLBACK, s.MMS_MSG, d.RESULT, d.DELIVER_DATE, 3 as SEND_STATUS, s.RESERVED4, s.RESERVED3, s.CONTENT_DATA from SDK_MMS_REPORT s left outer join SDK_MMS_REPORT_DETAIL d on(s.MSG_ID = d.MSG_ID) where s.USER_ID=? and s.RESERVED1=? {0} )a limit ?, ?
sent_kt_cancel_count=select count(*) as cnt from SDK_SMS_SEND where USER_ID=? and RESERVED1=? and SEND_STATUS=0
sent_kt_cancel_count_mms=select count(*) as cnt from SDK_MMS_SEND where USER_ID=? and RESERVED1=? and SEND_STATUS=0
sent_kt_count=select sum(a.cnt) as total from ( select count(*) as cnt from SDK_SMS_SEND where USER_ID=? and RESERVED1=? union all select count(*) as cnt from SDK_SMS_REPORT s left outer join SDK_SMS_REPORT_DETAIL d on(s.MSG_ID = d.MSG_ID) where s.USER_ID=? and s.RESERVED1=? ) a 
sent_kt_count_mms=select sum(a.cnt) as total from ( select count(*) as cnt from SDK_MMS_SEND where USER_ID=? and RESERVED1=? union all select count(*) as cnt from SDK_MMS_REPORT s left outer join SDK_MMS_REPORT_DETAIL d on(s.MSG_ID = d.MSG_ID) where s.USER_ID=? and s.RESERVED1=? ) a
sent_kt_cancel=delete from SDK_SMS_SEND where USER_ID=? and RESERVED1=? and SEND_STATUS=0
sent_kt_cancel_mms=delete from SDK_MMS_SEND where USER_ID=? and RESERVED1=? and SEND_STATUS=0
sent_kt_fail_update=update SDK_SMS_REPORT set RESERVED3=? where USER_ID=? and RESERVED1=? and FAIL_COUNT > 0 and   RESERVED3 is null
sent_kt_fail_update_mms=update SDK_MMS_REPORT set RESERVED3=? where USER_ID=? and RESERVED1=? and FAIL_COUNT > 0 and   RESERVED3 is null


##########################################################

##join
joinJuminDupleCheck=select count(*) from member where jumin_no=?
modify=update member set passwd=password(?), user_name=?, jumin_no=?, hp=?, phone_return=? where user_id=?

initPoint=insert into point(user_id, point, timeWrite) values (?,?,now())

##login
userPoint=SELECT point FROM point WHERE user_id = ?
loginAdmin=select count(*) from member_admin where user_id = ? and passwd=password(?) limit 1
loginAdminUpdateTime=update member_admin set timeLogin=? where user_id=?
updateReturnPhone=update member set phone_return=? where user_id=?


##Sent
selectSentLog=select  timeSend, idx  , line, reservation, returnPhone, count, message, cnt, timeWrite, tranType  from sent_log where user_id=? and timeSend > ? and timeSend < ?  and ynDel ='N' and reservation='N' order by timeSend desc
selectSentLogRes=select  timeSend, idx  , line, reservation, returnPhone, count, message, cnt, timeWrite, tranType  from sent_log where user_id=? and timeSend > ? and timeSend < ?  and ynDel ='N' and reservation='Y'  order by timeSend desc
selectSentData=select TR_ETC6,TR_SENDDATE,TR_PHONE,TR_ETC1,TR_CALLBACK,TR_MSG,TR_RSLTSTAT,TR_RSLTDATE,TR_SENDSTAT from SC_TRAN where tr_etc2=? and tr_etc6=? union all select TR_ETC6,TR_SENDDATE,TR_PHONE,TR_ETC1,TR_CALLBACK,TR_MSG,TR_RSLTSTAT,TR_RSLTDATE,TR_SENDSTAT from SC_LOG where tr_etc2=? and tr_etc6=?
selectSentDataIT=select sms_etc6 as TR_ETC6, sms_senddate as TR_SENDDATE, sms_target as TR_PHONE, sms_etc1 as TR_ETC1, sms_callback as TR_CALLBACK, sms_msg as TR_MSG, RTRIM(sms_rsltstat) as TR_RSLTSTAT, sms_rsltdate as TR_RSLTDATE, sms_sendstat as TR_SENDSTAT from sms_msg where sms_etc2=? and sms_etc6=? union all select sms_etc6 as TR_ETC6, sms_senddate as TR_SENDDATE, sms_target as TR_PHONE, sms_etc1 as TR_ETC1, sms_callback as TR_CALLBACK, sms_msg as TR_MSG, RTRIM(sms_rsltstat) as TR_RSLTSTAT, sms_rsltdate as TR_RSLTDATE, sms_sendstat as TR_SENDSTAT from sms_log where sms_etc2=? and sms_etc6=?
selectSentDataHN=select TR_ETC6,TR_SENDDATE,TR_PHONE,TR_ETC1,TR_CALLBACK,TR_MSG,TR_RSLTSTAT,TR_RSLTDATE,TR_SENDSTAT from HN_TRAN where tr_etc2=? and tr_etc6=? union all select TR_ETC6,TR_SENDDATE,TR_PHONE,TR_ETC1,TR_CALLBACK,TR_MSG,TR_RSLTSTAT,TR_RSLTDATE,TR_SENDSTAT from HN_LOG where tr_etc2=? and tr_etc6=?
selectSentDataHNR=select TR_ETC6,TR_SENDDATE,TR_PHONE,TR_ETC1,TR_CALLBACK,TR_MSG,TR_RSLTSTAT,TR_RSLTDATE,TR_SENDSTAT from HNR_TRAN where tr_etc2=? and tr_etc6=? union all select TR_ETC6,TR_SENDDATE,TR_PHONE,TR_ETC1,TR_CALLBACK,TR_MSG,TR_RSLTSTAT,TR_RSLTDATE,TR_SENDSTAT from HNR_LOG where tr_etc2=? and tr_etc6=?
selectSentDataLMS=select POST AS TR_ETC6,REQDATE AS TR_SENDDATE,PHONE AS TR_PHONE,ETC1 AS TR_ETC1,CALLBACK AS TR_CALLBACK,MSG AS TR_MSG,RSLT AS TR_RSLTSTAT, RSLTDATE AS TR_RSLTDATE,STATUS AS TR_SENDSTAT from MMS_MSG where ID=? and POST=? union all select POST AS TR_ETC6,REQDATE AS TR_SENDDATE,PHONE AS TR_PHONE,ETC1 AS TR_ETC1,CALLBACK AS TR_CALLBACK,MSG AS TR_MSG,RSLT AS TR_RSLTSTAT, RSLTDATE AS TR_RSLTDATE,STATUS AS TR_SENDSTAT from MMS_LOG where ID=? and POST=?
selectSentDataSK=select * from ( select ETC_INT_6 as TR_ETC6, RESERVED_DTTM as TR_SENDDATE, RCV_PHN_ID as TR_PHONE, ETC_CHAR_1 as TR_ETC1, SND_PHN_ID as TR_CALLBACK, SND_MSG as TR_MSG, rslt_val as TR_RSLTSTAT, reg_rcv_dttm as TR_RSLTDATE, SMS_STATUS as TR_SENDSTAT  from TBL_SUBMIT_QUEUE where ETC_CHAR_2=? and ETC_INT_6=CONVERT(?, UNSIGNED )  union all select  ETC_INT_6 as TR_ETC6, RESERVED_DTTM as TR_SENDDATE, RCV_PHN_ID as TR_PHONE, ETC_CHAR_1 as TR_ETC1, SND_PHN_ID as TR_CALLBACK, SND_MSG as TR_MSG, rslt_val as TR_RSLTSTAT, reg_rcv_dttm as TR_RSLTDATE, SMS_STATUS as TR_SENDSTAT  from TBL_MSG_HIST where ETC_CHAR_2=? and ETC_INT_6=CONVERT(?, UNSIGNED )  ) A
selectSentDataKT=select * from ( select A.RESERVED6 as TR_ETC6, A.SEND_DATE as TR_SENDDATE, replace(A.DEST_INFO,'119^','') as TR_PHONE, A.RESERVED1 as TR_ETC1, A.CALLBACK as TR_CALLBACK, A.SMS_MSG as TR_MSG, B.RESULT as TR_RSLTSTAT, B.REPORT_RES_DATE as TR_RSLTDATE, B.TCS_RESULT as TR_SENDSTAT  from SDK_SMS_REPORT A left outer join SDK_SMS_REPORT_DETAIL B on(A.JOB_ID = B.JOB_ID)  where A.RESERVED2=? and RESERVED6=CONVERT(?, UNSIGNED ) union all select  A.RESERVED6 as TR_ETC6, A.SEND_DATE as TR_SENDDATE, replace(A.DEST_INFO,'119^','') as TR_PHONE, A.RESERVED1 as TR_ETC1, A.CALLBACK as TR_CALLBACK, A.SMS_MSG as TR_MSG, A.SEND_RESULT as TR_RSLTSTAT, '' as TR_RSLTDATE, A.SEND_STATUS as TR_SENDSTAT from SDK_SMS_SEND A where A.RESERVED2=? and RESERVED6=CONVERT(?, UNSIGNED )   ) AB
selectLMSSentData=select POST, REQDATE, PHONE, ETC1, CALLBACK, MSG, RSLT, RSLTDATE, STATUS from MMS_MSG where ID=? and POST=? union all select POST, REQDATE, PHONE, ETC1, CALLBACK, MSG, RSLT, RSLTDATE, STATUS from MMS_LOG where ID=? and POST=?
selectLMSSentDataKT=select * from ( select A.RESERVED6 as TR_ETC6, A.SEND_DATE as TR_SENDDATE, replace(A.DEST_INFO,'119^','') as TR_PHONE, RESERVED1 as TR_ETC1, A.CALLBACK as TR_CALLBACK, A.MMS_MSG as TR_MSG, B.RESULT as TR_RSLTSTAT, B.REPORT_RES_DATE as TR_RSLTDATE, B.TCS_RESULT as TR_SENDSTAT from SDK_MMS_REPORT A left outer join SDK_MMS_REPORT_DETAIL B on(A.JOB_ID = B.JOB_ID)  where  A.USER_ID=? and RESERVED6=CONVERT(?, UNSIGNED ) union all select  A.RESERVED6 as TR_ETC6, A.SEND_DATE as TR_SENDDATE, replace(A.DEST_INFO,'119^','') as TR_PHONE, A.RESERVED1 as TR_ETC1, A.CALLBACK as TR_CALLBACK, A.MMS_MSG as TR_MSG, A.SEND_RESULT as TR_RSLTSTAT, '' as TR_RSLTDATE, A.SEND_STATUS as TR_SENDSTAT from SDK_MMS_SEND A where A.USER_ID=? and RESERVED6=CONVERT(?, UNSIGNED )   ) AB
selectLMSSentDataKTUser=select * from ( select A.RESERVED6 as ETC6, A.SEND_DATE as REQDATE, replace(A.DEST_INFO,'119^','') as PHONE,RESERVED1 as ETC1, A.CALLBACK as CALLBACK, A.MMS_MSG as MSG, B.RESULT as RSLT,B.REPORT_RES_DATE as RSLTDATE, 3 as STATUS from SDK_MMS_REPORT A left outer join SDK_MMS_REPORT_DETAIL B on(A.JOB_ID = B.JOB_ID)  where  A.USER_ID=? and RESERVED6=CONVERT(?, UNSIGNED ) union all select  A.RESERVED6 as ETC6, A.SEND_DATE as REQDATE, replace(A.DEST_INFO,'119^','') as PHONE, A.RESERVED1 as ETC1, A.CALLBACK as CALLBACK, A.MMS_MSG as MSG, A.SEND_RESULT as RSLT, '' as RSLTDATE,A.SEND_STATUS as STATUS from SDK_MMS_SEND A where A.USER_ID=? and RESERVED6=CONVERT(?, UNSIGNED )   ) AB
selectDeleteTransferLog=select date_format(timeSend, '%Y-%m-%d %H:%i:%S') as timeSend , count from sent_log where user_id=? and idx=?
deleteSentDataTranTable=delete from SC_TRAN where tr_etc2=? and tr_etc6=?
deleteSentDataTranTableIT=delete from sms_msg where sms_etc2=? and sms_etc6=?
deleteSentDataTranTableHN=delete from HN_TRAN where tr_etc2=? and tr_etc6=?
deleteSentDataTranTableHNR=delete from HNR_TRAN where tr_etc2=? and tr_etc6=?
deleteSentDataTranTableSK=delete from TBL_SUBMIT_QUEUE where ETC_CHAR_2=? and ETC_INT_6=CONVERT(?, UNSIGNED )
deleteSentDataTranTableKT=delete from SDK_SMS_SEND where RESERVED2=? and RESERVED6=CONVERT(?, UNSIGNED )
deleteLMSSentDataTranTable=delete from MMS_MSG where ID=? and POST=?
deleteLMSSentDataTranTableKT=delete from SDK_MMS_SEND where USER_ID=? and RESERVED6=CONVERT(?, UNSIGNED )
selectLMSSentDataLogtable=select count(*) as cnt from MMS_LOG where ID=? and POST=?
selectLMSSentDataLogtableKT=select count(*) as cnt from SDK_MMS_SEND where USER_ID=? and RESERVED6=CONVERT(?, UNSIGNED ) and SEND_RESULT IN ('99','98')

selectSentDataLogtable=select count(*) as cnt from SC_LOG where tr_etc2=? and tr_etc6=?
selectSentDataLogtableIT=select count(*) as cnt from sms_log where sms_etc2=? and sms_etc6=?
selectSentDataLogtableHN=select count(*) as cnt from HN_LOG where tr_etc2=? and tr_etc6=?
selectSentDataLogtableHNR=select count(*) as cnt from HNR_LOG where tr_etc2=? and tr_etc6=?
selectSentDataLogtableSK=select count(*) as cnt from TBL_MSG_HIST where ETC_CHAR_2=? and ETC_INT_6=CONVERT(?, UNSIGNED )
selectSentDataLogtableKT=select count(*) as cnt from SDK_SMS_SEND where  RESERVED2=? and RESERVED6=CONVERT(?, UNSIGNED ) and SEND_RESULT IN ('99','98')
updateSentGroup=update sent_log SET ynDel='Y',delType =?, timeDel=? WHERE user_id=? and idx=?
updateMonthSentGroup=update transfer_log_{0} SET ynDel=''Y'',delType =?, timeDel=? WHERE user_id=? and  tranAttr mod 2 = 0 
 
selectSentStatistic=select max(TR_CALLBACK) as returnPhone,max(date_format(TR_SENDDATE, ''%Y-%m-%d %H:%i:%S'')) as sendDate,max(TR_MSG) as message,sum(if( TR_SENDSTAT = ''0'', 1, 0)) as standbyCount,sum(if( TR_SENDSTAT = ''1'', 1, 0)) as sendingCount,sum(if(TR_RSLTSTAT in (''06''), 1, 0)) as successCount,sum(if(binary TR_RSLTSTAT not in (''00'',''06'',''05'',''07''), 1, 0)) as failCount,sum(if(binary TR_RSLTSTAT in (''21'',''05'',''07''), 1, 0)) as wrongCount ,sum(1) as totalCount from ( select TR_CALLBACK, TR_SENDDATE, TR_MSG, TR_SENDSTAT,TR_RSLTSTAT from SC_LOG_{0} where tr_etc2=? and tr_etc6=?  union all select TR_CALLBACK, TR_SENDDATE, TR_MSG, TR_SENDSTAT,TR_RSLTSTAT from SC_TRAN where tr_etc2=? and tr_etc6=? ) as a

##point
insertPointLog=insert into point_log(user_id, point, code, memo, timeWrite, old_point, now_point) values (?, ?, ?, ?, ?, ?, ?)
insertPoint=update point set point=point+?, timeWrite=? where user_id=?

##mobile 
insertClientIT=insert into sms_msg( sms_senddate, sms_id, sms_target, sms_callback, sms_msg, sms_etc1, sms_etc2, sms_etc3, sms_etc4, sms_etc5, sms_etc6,  sms_sendstat, sms_rsltstat, sms_rsltdate, sms_realsenddate) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
insertClientHN=insert into HN_TRAN( TR_SENDDATE, TR_ID, TR_PHONE, TR_CALLBACK, TR_MSG, TR_ETC1, TR_ETC2, TR_ETC3, TR_ETC4, TR_ETC5, TR_ETC6,  TR_SENDSTAT, TR_RSLTSTAT, TR_RSLTDATE, TR_MODIFIED) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
insertClientHNR=insert into HNR_TRAN( TR_SENDDATE, TR_ID, TR_PHONE, TR_CALLBACK, TR_MSG, TR_ETC1, TR_ETC2, TR_ETC3, TR_ETC4, TR_ETC5, TR_ETC6,  TR_SENDSTAT, TR_RSLTSTAT, TR_RSLTDATE, TR_MODIFIED) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
insertClientSK=Insert into TBL_SUBMIT_QUEUE ( USR_ID, USED_CD, RESERVED_DTTM, CMP_MSG_GROUP_ID, SAVED_FG, RCV_PHN_ID, SND_PHN_ID, SND_MSG, ETC_CHAR_1, ETC_CHAR_2, ETC_CHAR_3, ETC_CHAR_4, RESERVED_FG, ETC_INT_6, SMS_STATUS, RSLT_VAL, reg_rcv_dttm, cmp_snd_dttm, CONTENT_CNT) values ( '1555', '00', replace(replace(replace(?,'-',''),':',''), ' ', ''), ?, '1', ?, ?, ?, ?, ?, ?, ?, ?, CONVERT(?, UNSIGNED ), CONVERT(?, UNSIGNED ), ?,replace(replace(replace(?,'-',''),':',''), ' ', ''), replace(replace(replace(?,'-',''),':',''), ' ', ''), 0);
insertClientSKLMS=Insert into TBL_SUBMIT_QUEUE ( USR_ID, USED_CD, RESERVED_DTTM, CMP_MSG_GROUP_ID, SAVED_FG, RCV_PHN_ID, SND_PHN_ID, SND_MSG, ETC_CHAR_1, ETC_CHAR_2, ETC_CHAR_3, ETC_CHAR_4, RESERVED_FG, ETC_INT_6, SMS_STATUS, RSLT_VAL, reg_rcv_dttm, cmp_snd_dttm, CONTENT_CNT, content_mime_type) values ( '1555', '10', replace(replace(replace(?,'-',''),':',''), ' ', ''), ?, '1', ?, ?, ?, ?, ?, ?, ?, ?, CONVERT(?, UNSIGNED ), CONVERT(?, UNSIGNED ), ?,replace(replace(replace(?,'-',''),':',''), ' ', ''), replace(replace(replace(?,'-',''),':',''), ' ', ''), 1, 'text/plain' );
insertClientSKMMS=Insert into TBL_SUBMIT_QUEUE ( USR_ID, USED_CD, RESERVED_DTTM, CMP_MSG_GROUP_ID, SAVED_FG, RCV_PHN_ID, SND_PHN_ID, SND_MSG, ETC_CHAR_1,ETC_CHAR_2, ETC_CHAR_3, ETC_CHAR_4, RESERVED_FG, ETC_INT_6, SMS_STATUS, RSLT_VAL,reg_rcv_dttm, cmp_snd_dttm, CONTENT_CNT, content_mime_type, content_path) values ( '1555', '20', replace(replace(replace(?,'-',''),':',''), ' ', ''), ?, '1', ?, ?, ?, ?, ?, ?, ?, ?, CONVERT(?, UNSIGNED ), CONVERT(?, UNSIGNED ), ?,replace(replace(replace(?,'-',''),':',''), ' ', ''), replace(replace(replace(?,'-',''),':',''), ' ', ''),2, 'text/plain;image/jpg;' ,?);
insertClientKT=insert into SDK_SMS_SEND(SCHEDULE_TYPE,SUBJECT,DEST_COUNT, SEND_DATE, USER_ID, DEST_INFO, CALLBACK, SMS_MSG, RESERVED1, RESERVED2, RESERVED3, RESERVED4, RESERVED5, RESERVED6,  SEND_STATUS, SEND_RESULT, SEND_PROC_TIME, NOW_DATE) values ('1','',1,replace(replace(replace(?,'-',''),':',''), ' ', ''),?,CONCAT('119^',?),?,?,?,?,?,?,?,?,?,?,replace(replace(replace(?,'-',''),':',''), ' ', ''),replace(replace(replace(?,'-',''),':',''), ' ', '')) 
insertMMSClientKT=insert into SDK_MMS_SEND(SCHEDULE_TYPE, SUBJECT, DEST_INFO, CALLBACK, SEND_STATUS, SEND_DATE, MMS_MSG, CONTENT_COUNT, RESERVED4, CONTENT_DATA, RESERVED5, USER_ID, RESERVED6, RESERVED1, RESERVED2, RESERVED3, SEND_RESULT,NOW_DATE) values('1',?,CONCAT('119^',?),?,CONVERT(?, UNSIGNED ),replace(replace(replace(?,'-',''),':',''), ' ', ''),?,?,?,?,?,?,?,?,?,?,CONVERT(?, UNSIGNED ), DATE_FORMAT(NOW(), '%Y%m%d%H%i%s')) 
getPhoneOfAddressGroup=select phone, name from address where user_id=? and grp in  ( {0} )

getRefuse=select phone from refuse group by phone

##mymsg

##pointHistory
selectPointHistoryLog=select * from (SELECT @RNUM:=@RNUM+1 AS num, A.* FROM (select  idx, memo, point, now_point, timeWrite from point_log where user_id=?) AS A, (SELECT @RNUM:=0) as B ) C order by num desc limit ? , ?
selectPointHistoryLogCnt=select count(*) from point_log where user_id=?

##home
selectNotices=select idx, type, title from board_notice where ynView = 'Y' order by writedate  desc limit 4
homeEmoti=select msg from emoticon order by idx DESC limit 5
homeEmotiCate=select msg from emoticon where gubun=? and category like ? order by idx DESC limit ?,?
homeEmotiCatePage=select (select count(*) from emoticon where gubun=? and category like ?) as cnt, idx, msg from emoticon where gubun=? and category like ? order by idx DESC limit ?,?
homeEmotiCatePageLMS=select (select count(*) from emoticon_lms where gubun=? and category like ?) as cnt, idx, msg from emoticon_lms where gubun=? and category like ? order by idx DESC limit ?,?
homeEmotiCatePageMMS=select (select count(*) from emoticon_mms where gubun=? and category like ?) as cnt, idx, msg, title from emoticon_mms where gubun=? and category like ? order by title ASC limit ?,?

##admin
memberList=select m.idx, m.user_id,m.passwd,m.user_name,m.jumin_no,m.phone_return,m.hp,m.unit_cost,m.line,m.memo,m.timeLogin,m.timeJoin,m.leaveYN, m.email, m.emailYN, m.hpYN, p.point from member m inner join point p on(m.user_id = p.user_id)
pointList=select user_id, point, timeWrite from point
pointLogList=select user_id, point, code, memo, timeWrite, old_point, now_point from point_log
adminSelectSentLog=select  user_id, timeSend, idx  , line, reservation, returnPhone, count, message, cnt, timeWrite, tranType, ynDel  from sent_log where timeSend > ? and timeSend < ?  and reservation='N' order by timeSend desc
adminSelectSentLogRes=select  user_id, timeSend, idx  , line, reservation, returnPhone, count, message, cnt, timeWrite, tranType  from sent_log where timeSend > ? and timeSend < ?  and ynDel ='N' and reservation='Y'  order by timeSend desc
adminMemberUpdateLog=insert into member_log(passwd,user_id,user_name,jumin_no, email, phone_return, hp, unit_cost, line, memo, timeLogin, timeJoin, leaveYN )  select passwd,user_id,user_name,jumin_no, email, phone_return, hp, unit_cost, line, memo, timeLogin, timeJoin, leaveYN from member where  idx=? and user_id=?
adminMemberUpdate=update member set user_name=?,jumin_no=?, email=?, phone_return=?, hp=?, unit_cost=?, line=?, memo=?, timeLogin=?, timeJoin=?, leaveYN=? where idx=? and user_id=?
adminMemberInitPasswd=update member set passwd=password(?) where user_id=?
adminMemberDelete=delete from member where user_id=?
adminPointDelete=delete from point where user_id=?
adminBillingList=SELECT idx, user_id, method, amount, order_no, unit_cost, remain_point, memo, admin_id, timeWrite FROM billing where delYN!='Y'
adminBillingUpdate=update billing set method=?, amount=?, order_no=?, unit_cost=?, remain_point=?, memo=?, admin_id=?, timeWrite=? where idx=? and user_id=?
adminBillingDelete=update billing set delYN='Y' where idx=?
adminCashList=select idx, user_id,account, amount, method, name, timeWrite from cash_req order by timeWrite DESC
adminTaxList=select * from (SELECT b.method, b.amount, b.timeWrite as billingData, t.idx, t.user_id, t.billing_idx, t.comp_name, t.comp_no, t.name, t.addr, t.upte, t.upjong, t.email, t.yn, t.timeWrite FROM tax t inner join billing b on(t.billing_idx = b.idx)  order by t.timeWrite desc) B
adminCashDelete=delete from cash_req where idx=?
adminTaxDelete=delete from tax where idx=?
adminTaxComplet=update tax set yn='Y' where idx=?
adminEmoticon=select idx, msg from emoticon where category=? order by idx DESC limit ?,?
adminEmoticonUpdate=update emoticon set msg=? where idx=?
adminEmoticonUpdate2=update emoticon set gubun=?, category=? ,msg=? where idx=?
adminEmoticonUpdateLMS=update emoticon_lms set msg=? where idx=?
adminEmoticonDelete=delete from emoticon where idx=?
adminEmoticonDeleteLMS=delete from emoticon_lms where idx=?
adminEmoticonDeleteMMS=delete from emoticon_mms where idx=?
adminEmoticonInsert=insert into emoticon(category, msg) values (?,?)

adminEmoticonCate=select idx, msg,gubun, category from emoticon where gubun=? and  category like ? order by idx DESC limit ?,?
adminEmoticonInsertCate=insert into emoticon(gubun, category, msg) values (?, ?,?)
adminEmoticonInsertCateLMS=insert into emoticon_lms(gubun, category, msg) values (?, ?,?)
adminEmoticonInsertCateMMS=insert into emoticon_mms(gubun, category, msg, title) values (?, ?,?,?)

##billing
insertBilling=INSERT INTO billing(user_id, method, amount, order_no,  unit_cost, point, remain_point,  timeWrite, tid, timestamp) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?);
insertCash=insert into cash_req (user_id, account, amount, method, name, timeWrite) value ( ?,?,?,?,?,?)
selectBilling=select * from (  SELECT @RNUM:=@RNUM+1 AS num, A.* FROM ( select * from billing where user_id=? and delYN!='Y' order by timewrite ASC ) AS A, (SELECT @RNUM:=0) as B ) C order by num desc limit ?,?
selectBillingCnt=select count(*) from billing where user_id=? and delYN!='Y'
selectBillingTax=select b.amount, b.timeWrite, t.comp_name, t.comp_no, t.name, t.addr, t.upte, t.upjong, t.email, t.yn from billing b left outer join tax t  on (b.user_id = t.user_id) where b.idx=? and b.method='cash' and b.delYN!='Y' order by t.timeWrite desc limit 0,1
insertTax=INSERT INTO tax(user_id, billing_idx, comp_name, comp_no, name, addr, upte, upjong, email, yn, timeWrite)VALUES (?,?,?,?,?,?,?,?,?,?,now());
selectBillingUnit=select unit_cost from member where user_id=?

##emoti
emoti=select msg from emoticon where category=? order by idx DESC limit ?,?
selectMainEmt=select msg from emoticon where gubun=? and category like ? order by idx desc limit ?,?;
selectMainLMS=select msg from emoticon_lms where gubun like ?  and category like ? order by idx desc limit ?,?;
selectMainEmtCate=select category from emoticon where gubun=? group by category order by category asc;
selectMainLMSCate=select category from emoticon_lms where gubun like ? group by category order by category asc;
selectMainEmtCateLMS=select category from emoticon_lms where gubun=? group by category order by category asc;
selectMainEmtCateMMS=select category from emoticon_mms where gubun=? group by category order by category asc;
selectMainMmsCate=select category from emoticon_mms where gubun like ? group by category order by category asc;
selectMainMms=select msg, title from emoticon_mms where gubun like ? and category like ? order by idx desc limit ?,?;

##notic
noticList=select idx, title, content, timeWrite, cnt, writer from notic order by idx desc 
noticListLimit=select idx, title, content, timeWrite, cnt, writer from notic order by idx desc limit ?
noticUpdateCnt=update notic set cnt=cnt+1 where idx=?
noticUpdate=update notic set title=?, content=?, timeWrite=?, cnt=?, writer=? where idx=?
noticDelete=delete from notic where idx=?
noticInsert=insert into notic(title, content, timeWrite, cnt, writer) values(?,?,now(),0,?)
noticListPage=select * from (SELECT @RNUM:=@RNUM+1 AS num, A.* FROM (select idx, title, content, timeWrite, cnt, writer from notic) AS A, (SELECT @RNUM:=0) as B ) C where num between ? and ? order by num desc
faqListPage=select * from (SELECT @RNUM:=@RNUM+1 AS num, A.* FROM (select idx, title, content, timeWrite, cnt, writer from faq) AS A, (SELECT @RNUM:=0) as B ) C where num between ? and ? order by num desc

##faq
faqList=select idx, title, content, timeWrite, cnt, writer from faq order by idx desc
faqInsert=insert into faq(title, content, timeWrite) values(?,?,now())
faqUpdate=update faq set title=?, content=?, timeWrite=now() where idx=?
faqDelete=delete from faq where idx=?

##coupon
couponUserSelect=select key_num from coupon where user_id=?
couponKeySelect=select key_num from coupon where key_num=? and used='N'
couponUse=update coupon set user_id=?, used='Y', timeUsed=now() where key_num=?

##urlplus
insertURL_MW_HTML=INSERT INTO URL_MW_HTML VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
updateURL_MW_HTML=UPDATE URL_MW_HTML SET HTML_TYPE = ?, MW_TEXT_CNT = ?, MW_IMAGE_CNT = ?, COUPON_CNT = ?, DT_START = ?, DT_END = ?, DT_FORCE_END = ?, DT_CREATE = ?, DT_MODIFY = ?, CERT_SMS_YN = ?, CERT_USER_CNT = ? where HTML_KEY = ? and CLI_ID = ?
checkURL_MW_HTML=SELECT count(*) FROM URL_MW_HTML WHERE HTML_KEY = ? and CLI_ID = ?
selectURL_MW_HTML=SELECT HTML_KEY, CLI_ID, HTML_TYPE, MW_TEXT_CNT, MW_IMAGE_CNT, COUPON_CNT, DT_START, DT_END, DT_FORCE_END, DT_CREATE, DT_MODIFY, CERT_SMS_YN, CERT_USER_CNT FROM URL_MW_HTML WHERE HTML_KEY=? AND CLI_ID=?;

insertURL_MW_HTML_TAG=INSERT INTO URL_MW_HTML_TAG VALUES (0, ?, ?, ?, ?, ?);
updateURL_MW_HTML_TAG=UPDATE URL_MW_HTML_TAG SET TAG_SEQ = ?, TAG_KEY = ?, TAG_VALUE = ? where HTML_KEY = ? and PAGE_NUM = ?
checkURL_MW_HTML_TAG=SELECT count(*) FROM URL_MW_HTML_TAG WHERE HTML_KEY = ? and PAGE_NUM = ?
selectURL_MW_HTML_TAG_PAGE=SELECT SEQ, PAGE_NUM, TAG_SEQ, TAG_KEY, TAG_VALUE FROM URL_MW_HTML_TAG WHERE HTML_KEY = ? AND PAGE_NUM=? order by TAG_SEQ;
selectURL_MW_HTML_TAG=SELECT SEQ, PAGE_NUM, TAG_SEQ, TAG_KEY, TAG_VALUE FROM URL_MW_HTML_TAG WHERE HTML_KEY = ? order by PAGE_NUM, TAG_SEQ;
deleteURL_MW_HTML_TAG=delete from URL_MW_HTML_TAG where HTML_KEY = ? and PAGE_NUM = ?
selectPageURL_MW_HTML_TAG=select max(PAGE_NUM) as maxPg from URL_MW_HTML_TAG where HTML_KEY = ?

