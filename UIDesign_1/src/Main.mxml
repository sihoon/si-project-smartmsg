<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:component="component.*"
			   xmlns:services="services.*"
			   width="100%" height="100%"
			   frameRate="45"
			   skinClass="skin.AppSkin" xmlns:excel="component.excel.*">
	<fx:Style source="assets/style/styles.css"/>
	<fx:Script>
		<![CDATA[
			import component.Join;
			
			private var join:Join;
			
			// login check
			public function login_check():void {
				login.login_check();
			}
			
			
			public function joinView():void {
				
				join = new Join();
				join.verticalCenter = 0;
				join.horizontalCenter = 0;
				join.addEventListener("complete", join_completeHandler);
				this.contentGroup.addElement(join);
			}
			
			private function join_completeHandler(event:Event):void {
				
				join.removeEventListener("complete", join_completeHandler);
				this.contentGroup.removeElement(join);
				login.login_check();
			}
		]]>
	</fx:Script>
	
	<s:states>
		<s:State name="home"/>
		<s:State name="send"/>
		<s:State name="address"/>
		<s:State name="bill"/>
		<s:State name="log"/>
	</s:states>
	<fx:Declarations>
		<s:Bounce id="bounceEasing"/>
	</fx:Declarations>
	<s:transitions>
		<s:Transition id="transition" fromState="*" toState="*">
			<s:Parallel id="t1" targets="{[send, address, bill, log]}">
				<s:Rotate3D id="rotateEffect" 
							angleXFrom="0.0" angleXTo="0.0" 
							angleYFrom="0.0" angleYTo="360.0" 
							angleZFrom="0.0" angleZTo="0.0"
							duration="1000"
							repeatCount="1"
							easer="{bounceEasing}"
							/>
			</s:Parallel>
		</s:Transition>
	</s:transitions>
	
	<component:Menus id="menus" skinClass="skin.MenuSkin"
					 x="50" y="100"
					 change="{this.currentState = event.result as String}"/>
	<component:Login id="login" skinClass="skin.LoginSkin"
					 horizontalCenter="0" y="50"
					 />
	<s:Group horizontalCenter="0" verticalCenter="0">
		<component:Address id="address" includeIn="address" skinClass="skin.AddressSkin" />
		<component:Bill id="bill" includeIn="bill" />
		<component:Log id="log" includeIn="log" skinClass="skin.LogSkin" />
		<component:Send id="send" includeIn="send" skinClass="skin.SendSkin" showEffect="{transition}"/>
	</s:Group>
	
</s:Application>