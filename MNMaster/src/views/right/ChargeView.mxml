<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009"
		xmlns:s="library://ns.adobe.com/flex/spark"
		xmlns:services="services.*"
		title="ChargeView">
	<fx:Script>
		<![CDATA[
			import comm.Popup;
			import comm.SLibrary;
			
			import mx.rpc.events.ResultEvent;
			
			import spark.components.SplitViewNavigator;
			import spark.components.ViewNavigator;
			
			import valueObjects.BooleanAndDescriptionVO;
			import valueObjects.MemberVO;
			
			import views.left.MemberView;
			
			[Bindable]
			private var memberVO:MemberVO = null;
			
			
			
			override public function set data(value:Object):void
			{
				// TODO Auto Generated method stub
				super.data = value;
				memberVO = super.data as MemberVO;
				
			}
			
			
			
			protected function setMember(arg0:MemberVO):void {
				setMemberResult.token = mst.setMember(arg0);
			}
			
			protected function setMemberResult_resultHandler(event:ResultEvent):void
			{
				var bvo:BooleanAndDescriptionVO = event.result as BooleanAndDescriptionVO;
				
				var alert:Popup = new Popup();
				if (bvo.bResult == true) {
					alert.show("update Success.");
				} else {
					alert.show("update Fail.");
				}
				
				/*
				var splitNavigator:SplitViewNavigator = navigator.parentNavigator as SplitViewNavigator;
				var detailNavigator:ViewNavigator = splitNavigator.getViewNavigatorAt(0) as ViewNavigator;
				splitNavigator.hideViewNavigatorPopUp();
				
				var mv:MemberView = detailNavigator.activeView as MemberView;
				var listMv:MemberVO = mv.list.selectedItem as MemberVO;
				listMv = memberVO;
				*/
			}
			
			protected function btnCharge_clickHandler(event:MouseEvent):void
			{
				var user_id:String = user_idTextInput.text;
				var amount:int = new int(amountTextInput.text);
				var point:int = new int(pointTextInput.text);
				
				if (point > 0) setCharge(user_id, amount, point);
				else setChargeAuto(user_id, amount);
				
			}
			
			
			protected function setCharge(arg0:String, arg1:int, arg2:int):void
			{
				setChargeResult.token = mst.setCharge(arg0, arg1, arg2);
			}
			
			
			protected function setChargeAuto(arg0:String, arg1:int):void
			{
				setChargeAutoResult.token = mst.setChargeAuto(arg0, arg1);
			}
			
			protected function setCharge_resultHandler(event:ResultEvent):void
			{
				var bvo:BooleanAndDescriptionVO = event.result as BooleanAndDescriptionVO;
				if (bvo.bResult == true) {
					SLibrary.alert("update Success.");
				} else {
					SLibrary.alert("update Fail.");
				}
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<s:CallResponder id="setMemberResult" result="setMemberResult_resultHandler(event)"/>
		<services:Mst id="mst"/>
		<s:CallResponder id="setChargeResult" result="setCharge_resultHandler(event)"/>
		<s:CallResponder id="setChargeAutoResult" result="setCharge_resultHandler(event)"/>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<s:Scroller width="100%" height="100%">
		<s:Group>
			<s:Form width="100%" defaultButton="{btnCharge}">
				<s:FormItem label="User_id">
					<s:TextInput id="user_idTextInput" text="{memberVO.user_id}" editable="false"/>
				</s:FormItem>
				<s:FormItem label="Amount">				
					<s:TextInput id="amountTextInput" prompt="금액" text=""/>
				</s:FormItem>
				
				<s:FormItem label="Point">				
					<s:TextInput id="pointTextInput" prompt="건수" text=""/>
				</s:FormItem>
				
				<s:Button id="btnCharge" label="Charge" click="btnCharge_clickHandler(event)"/>
				
			</s:Form>
		</s:Group>
	</s:Scroller>
</s:View>
