<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" 
				autoDrawBackground="true" 
				showsCaret="false"
				>
	<fx:Script>
		<![CDATA[
			import lib.SLibrary;
			
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			
			import spark.components.List;
			import spark.components.supportClasses.ListBase;
			
			import valueObjects.AddressVO;
			[Bindable]
			private var bSelected:Boolean = false;
			
			[Bindable]
			private var bLast:Boolean = false;
			
			override public function set data(value:Object):void
			{
				// TODO Auto Generated method stub
				super.data = value;
				bSelected = selected;
				//if (this.itemIndex == List(this.owner).dataProvider.length-1)
				//	bLast = true;
				
				if (data && data.grpName) {
					labelDisplay.text = data.grpName;
					if (data.grpName != "전체") {
						var cnt:Number = Number(data.phone);
						if (cnt < 1) cnt = 1;
						labelCnt.text = "("+String(cnt -1)+")";
					} else {
						labelCnt.text = "";	
					}
						
				}
			}
			
			
			private function onChange(event:Event):void 
			{
				if (labelDisplay && this.owner && data) {
					var oldValue:String = labelDisplay.text;
					var list:ListBase = this.owner as ListBase;
					if (data.idx == 0 && data.grpName != "전체" && inputTxt.text == "") {
						list.dataProvider.removeItemAt( this.itemIndex );
						return;
					}
					if (oldValue != inputTxt.text)
					{
						if (getGroupNameCount(inputTxt.text) >= 1) {
							SLibrary.alert("동일한 그룹 이름이 있습니다.");
						} else {
							data.etcInfo = labelDisplay.text;
							data.grpName = inputTxt.text;
							labelDisplay.text = inputTxt.text;
							
						}
					}
					
				}
				isEdit(false);
			}
			
			private function getGroupNameCount(grpName:String):int {
				
				var acGroup:ArrayCollection = List(this.owner).dataProvider as ArrayCollection;
				
				var cnt:int = acGroup.length;
				var avo:AddressVO = null;
				
				var rslt:int = 0;
				for (var i:int = 0; i < cnt; i++) {
					avo = acGroup[i];
					if (grpName == avo.grpName) rslt++;
				}
				return rslt;
			}
			
			public function onEdit(event:Event):void 
			{
				if (data.grpName != "전체") {
					inputTxt.text = data.grpName;
					isEdit(true);
					//set cursor postion to end
					inputTxt.selectRange(inputTxt.text.length,inputTxt.text.length+1);
					inputTxt.setFocus();
				}
				
			}
			
			private function isEdit(value:Boolean):void 
			{
				labelDisplay.visible = !value;
				labelCnt.visible = !value;
				inputTxt.visible =  value;
				updateBtn.visible =  value;
			}

			
			protected function inputTxt_enterHandler(event:FlexEvent):void {
				
				inputTxt.selectRange(inputTxt.text.length,inputTxt.text.length);

				inputTxt.dispatchEvent( new FocusEvent(FocusEvent.FOCUS_OUT) );
			}
			
			override public function set selected(value:Boolean):void
			{
				// TODO Auto Generated method stub
				super.selected = value;
				sel.visible = value;
			}
			
			
		]]>
	</fx:Script>
	
	<s:Group left="0" verticalCenter="0" right="15">
		<s:Label id="labelDisplay" 
				 doubleClick="onEdit(event)"
				 top="7" bottom="5" left="5"/>
		<s:Label id="labelCnt" right="0" top="7" bottom="5"/>
		<s:TextInput id="inputTxt" 
					 visible="false"
					 top="1" bottom="1" left="1" width="110"/>
		<s:Button id="updateBtn" visible="false" height="26" width="70" right="0" verticalCenter="0" label="저장" styleName="button_light" click="onChange(null)"/>
	</s:Group>
	
	<s:BitmapImage id="sel" source="/skin/ics/assets/list_select.png" smooth="true" right="0" visible="false"/>	
	
	<s:Rect width="100%" bottom="0" height="0.5">
		<s:stroke>
			<s:SolidColorStroke color="#D9D9D9" />
		</s:stroke>
	</s:Rect>
	
	
	
</s:ItemRenderer>
